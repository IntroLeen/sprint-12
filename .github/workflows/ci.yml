name: CI & Release to Docker Hub

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
    tags:
      - "v*"

jobs:
  test:
    name: Lint, Vet & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"
          cache: true

      - name: Ensure go.mod (init if missing) & tidy
        run: |
          if [ ! -f go.mod ]; then
            MOD_PATH="github.com/${GITHUB_REPOSITORY}"
            echo "go.mod not found — initializing: $MOD_PATH"
            go mod init "$MOD_PATH"
          fi
          go mod tidy

      - name: gofmt (fail on diff)
        run: |
          diff=$(gofmt -l .)
          if [ -n "$diff" ]; then
            echo "The following files are not gofmt-ed:"
            echo "$diff"
            exit 1
          fi

      - name: go vet
        run: go vet ./...

      - name: go test
        run: go test ./... -v

  publish:
    name: Build & Push Docker image
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/') 
    env:
      IMAGE_NAME: introleen/parcel-tracker
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go (for pre-build mod files)
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"
          cache: true

      - name: Ensure go.mod (init if missing) & tidy
        run: |
          if [ ! -f go.mod ]; then
            MOD_PATH="github.com/${GITHUB_REPOSITORY}"
            echo "go.mod not found — initializing: $MOD_PATH"
            go mod init "$MOD_PATH"
          fi
          go mod tidy

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: introleen
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
